<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jon Notes</title>
    <style>
        body {
            margin: 0;
            padding: 20px;
            min-height: 100vh;
            font-family: Arial, sans-serif;
            background: linear-gradient(45deg, 
                #2193b0,
                #6dd5ed,
                #0f2027,
                #4B0082
            );
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
        }

        .notes-container {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: calc(100% - 40px); /* Adjusted width */
            box-sizing: border-box;
        }

        textarea {
            width: 100%;
            height: 150px;
            margin: 10px 0;
            padding: 15px;
            border: 2px solid #4B0082;
            border-radius: 8px;
            font-size: 16px;
            resize: vertical;
            box-sizing: border-box; /* Added for accurate width */
        }

        /* Rest of the CSS remains the same */
        button.primary {
            background-color: #4B0082;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        button.primary:hover {
            background-color: #6A5ACD;
        }

        .note {
            background: white;
            padding: 15px;
            margin: 10px 0;
            border-left: 4px solid #4B0082;
            border-radius: 4px;
            position: relative;
        }

        .timestamp {
            color: #666;
            font-size: 0.9em;
            margin-bottom: 5px;
        }

        .note-controls {
            margin-top: 8px;
            display: flex;
            gap: 8px;
            justify-content: flex-end;
        }

        .note-controls button {
            padding: 4px 8px;
            border-radius: 3px;
            cursor: pointer;
            border: none;
            font-size: 0.9em;
        }

        .edit-btn {
            background-color: #4B0082;
            color: white;
        }

        .delete-btn {
            background-color: #cc0000;
            color: white;
        }

        .note-content {
            padding: 8px;
            margin: 4px 0;
            border: 1px solid transparent;
        }

        .editing {
            border: 1px solid #4B0082;
            border-radius: 4px;
            background-color: #f8f8f8;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="notes-container">
            <h1>Jon Notes</h1> <!-- Changed heading -->
            <div id="notesList"></div>
            <textarea id="noteInput" placeholder="Type your note here..."></textarea>
            <button class="primary" onclick="saveNote()">Save Note</button>
        </div>
    </div>

    <script>
        // JavaScript remains the same as previous working version
        document.addEventListener('DOMContentLoaded', loadNotes);

        function saveNote() {
            const input = document.getElementById('noteInput');
            const text = input.value.trim();
            
            if (text) {
                const notes = JSON.parse(localStorage.getItem('notes') || '[]');
                const newNote = {
                    id: Date.now().toString(),
                    text: text,
                    timestamp: new Date().toLocaleString()
                };
                
                notes.unshift(newNote);
                localStorage.setItem('notes', JSON.stringify(notes));
                input.value = '';
                loadNotes();
            }
        }

        function loadNotes() {
            const notes = JSON.parse(localStorage.getItem('notes') || '[]');
            const notesList = document.getElementById('notesList');
            
            notesList.innerHTML = notes.map(note => `
                <div class="note" data-id="${note.id}">
                    <div class="timestamp">${note.timestamp}</div>
                    <div class="note-content">${note.text}</div>
                    <div class="note-controls">
                        <button class="edit-btn" onclick="toggleEdit('${note.id}')">Edit</button>
                        <button class="delete-btn" onclick="deleteNote('${note.id}')">Delete</button>
                    </div>
                </div>
            `).join('');
        }

        function deleteNote(id) {
            const notes = JSON.parse(localStorage.getItem('notes') || '[]');
            const filtered = notes.filter(note => note.id !== id);
            localStorage.setItem('notes', JSON.stringify(filtered));
            loadNotes();
        }

        function toggleEdit(id) {
            const noteDiv = document.querySelector(`.note[data-id="${id}"]`);
            const content = noteDiv.querySelector('.note-content');
            const btn = noteDiv.querySelector('.edit-btn');
            
            if (content.isContentEditable) {
                content.contentEditable = false;
                btn.textContent = 'Edit';
                noteDiv.classList.remove('editing');
                
                // Update storage
                const notes = JSON.parse(localStorage.getItem('notes') || '[]');
                const index = notes.findIndex(n => n.id === id);
                if (index > -1) {
                    notes[index].text = content.textContent;
                    localStorage.setItem('notes', JSON.stringify(notes));
                }
            } else {
                content.contentEditable = true;
                btn.textContent = 'Save';
                noteDiv.classList.add('editing');
                content.focus();
            }
        }

        document.getElementById('noteInput').addEventListener('keydown', e => {
            if (e.ctrlKey && e.key === 'Enter') {
                saveNote();
            }
        });
    </script>
</body>
</html>
